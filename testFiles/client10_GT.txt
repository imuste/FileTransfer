UDP has a mechanism to detect bits that have flipped in a packet. It does this by doing the checksum which takes data, divides it into 16 bit words, and then it takes the sum and adds it to the UDP header. This is very basic and not foolproof so it doesn't protect against attackers more against random flips. So UDP takes the sum and the ones compliment that allows for dealing with overflow. By taking the ones compliment, we ensure that an all 0's packet is all 1's so the other side can detect the error because as soon as checking our sum against the checksum produces any 0's, we know there is an error.
With UDP we have finer application level control over what data is being sent and when it is sent. When the application layer hands UDP a segment, it will immediately pass it on to the network layer without doing some of the things that TCP does which allows for
  
higher speed and more control. Especially in scenarios where we can tolerate some data loss and don't want to keep a connection and clog up the link. So this allows for higher speed as well. Since there is no connection, we also don't need to keep track of a connection state saving resources, and lastly we have small header overhead in the packets because the headers are 8 bytes in UDP versus 20 bytes in TCP